name: Food Truck Multi-Stage Build.

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select build environment (Dev, QA, Prod)"
        required: true
        default: "Dev"

jobs:
  build:
    name: Build Food Truck (${{ github.event.inputs.environment }})
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0.1'

      - name: Print Selected Environment
        run: echo "Selected environment: ${{ github.event.inputs.environment }}"

      - name: Build (No Code Signing)
        run: |
          xcodebuild \
            -project "Food Truck.xcodeproj" \
            -scheme "Food Truck" \
            -configuration Release \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            -archivePath build/FoodTruck-${{ github.event.inputs.environment }}.xcarchive \
            archive

      - name: Upload XCArchive artifact
        uses: actions/upload-artifact@v4
        with:
          name: FoodTruck-${{ github.event.inputs.environment }}-XCArchive
          path: build/FoodTruck-${{ github.event.inputs.environment }}.xcarchive

  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.environment == 'Dev' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: FoodTruck-Dev-XCArchive
          path: ./artifact
      - name: Deploy
        run: echo "Deploying to Dev environment..."

  deploy-qa:
    name: Deploy to QA
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.environment == 'QA' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: FoodTruck-QA-XCArchive
          path: ./artifact
      - name: Deploy
        run: echo "Deploying to QA environment..."

  deploy-prod:
    name: Deploy to Prod
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.environment == 'Prod' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: FoodTruck-Prod-XCArchive
          path: ./artifact
      - name: Deploy
        run: echo "Deploying to Production environment..."
